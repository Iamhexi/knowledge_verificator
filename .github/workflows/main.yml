name: Main CI pipeline

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12' 
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install --all-extras

      - name: Reformat with black
        run: black .

      - name: Run type checker
        run: mypy --follow-imports=skip --check-untyped-defs .

      - name: Run ruff linter
        run: |
          ruff check .

      - name: Run pylint linter
        run: |
          pylint .

      - name: Run the automated test
        run: poetry run pytest -v